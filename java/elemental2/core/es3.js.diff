552c552
<  * @param {...*} var_args
---
>  * @param {...T} items
558c558
< function Array(var_args) {}
---
> function Array(items) {}
572,573c572,573
<  * @param {...*} var_args
<  * @return {!Array<?>}
---
>  * @param {...T} items
>  * @return {!Array<T>}
578c578
< Array.prototype.concat = function(var_args) {};
---
> Array.prototype.concat = function(items) {};
645c645
<  * @param {*=} opt_begin Zero-based index at which to begin extraction.  A
---
>  * @param {number=} opt_begin Zero-based index at which to begin extraction.  A
647c647
<  * @param {*=} opt_end Zero-based index at which to end extraction.  slice
---
>  * @param {number=} opt_end Zero-based index at which to end extraction.  slice
674c674
<  * @param {*=} opt_index Index at which to start changing the array. If negative,
---
>  * @param {number=} opt_index Index at which to start changing the array. If negative,
677c677
<  * @param {*=} opt_howMany An integer indicating the number of old array elements
---
>  * @param {number=} opt_howMany An integer indicating the number of old array elements
708c708
<  * @param {...*} var_args
---
>  * @param {...T} var_args
1986c1986
<  * @param {*} pattern
---
>  * @param {string} pattern
1997c1997
<  * @param {*} str The string to search.
---
>  * @param {string} str The string to search.
2005c2005
<  * @param {*} str The string to search.
---
>  * @param {string} str The string to search.
